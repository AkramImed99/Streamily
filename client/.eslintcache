[{"E:\\streamili\\client\\src\\index.js":"1","E:\\streamili\\client\\src\\components\\App.js":"2","E:\\streamili\\client\\src\\components\\streams\\StreamCreate.js":"3","E:\\streamili\\client\\src\\components\\streams\\StreamDelete.js":"4","E:\\streamili\\client\\src\\components\\streams\\StreamShow.js":"5","E:\\streamili\\client\\src\\components\\streams\\StreamList.js":"6","E:\\streamili\\client\\src\\components\\streams\\StreamEdit.js":"7","E:\\streamili\\client\\src\\components\\Header.js":"8","E:\\streamili\\client\\src\\components\\GoogleAuth.js":"9","E:\\streamili\\client\\src\\actions\\index.js":"10","E:\\streamili\\client\\src\\reducers\\index.js":"11","E:\\streamili\\client\\src\\reducers\\authReducer.js":"12","E:\\streamili\\client\\src\\actions\\types.js":"13","E:\\streamili\\client\\src\\apis\\streams.js":"14","E:\\streamili\\client\\src\\reducers\\streamReducer.js":"15","E:\\streamili\\client\\src\\history.js":"16","E:\\streamili\\client\\src\\components\\streams\\StreamForm.js":"17","E:\\streamili\\client\\src\\components\\Modal.js":"18"},{"size":593,"mtime":1612047057770,"results":"19","hashOfConfig":"20"},{"size":1220,"mtime":1612908643311,"results":"21","hashOfConfig":"20"},{"size":788,"mtime":1612661456401,"results":"22","hashOfConfig":"20"},{"size":1575,"mtime":1612743717970,"results":"23","hashOfConfig":"20"},{"size":1594,"mtime":1612918665016,"results":"24","hashOfConfig":"20"},{"size":2500,"mtime":1612912356103,"results":"25","hashOfConfig":"20"},{"size":1087,"mtime":1612665526703,"results":"26","hashOfConfig":"20"},{"size":548,"mtime":1611367399003,"results":"27","hashOfConfig":"20"},{"size":2224,"mtime":1612667097341,"results":"28","hashOfConfig":"20"},{"size":1622,"mtime":1612744058706,"results":"29","hashOfConfig":"20"},{"size":296,"mtime":1612312016321,"results":"30","hashOfConfig":"20"},{"size":460,"mtime":1611849844124,"results":"31","hashOfConfig":"20"},{"size":299,"mtime":1612136510159,"results":"32","hashOfConfig":"20"},{"size":111,"mtime":1612743854206,"results":"33","hashOfConfig":"20"},{"size":841,"mtime":1612395006096,"results":"34","hashOfConfig":"20"},{"size":92,"mtime":1612395208718,"results":"35","hashOfConfig":"20"},{"size":1947,"mtime":1612667097341,"results":"36","hashOfConfig":"20"},{"size":710,"mtime":1612901560466,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"166twsd",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"E:\\streamili\\client\\src\\index.js",["82"],"import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport {Provider, provider} from 'react-redux';\r\nimport {createStore,applyMiddleware,compose} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n    );\r\n\r\nReactDom.render(\r\n    <Provider store={store}>\r\n    <App/>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);",["83","84"],"E:\\streamili\\client\\src\\components\\App.js",[],"E:\\streamili\\client\\src\\components\\streams\\StreamCreate.js",["85"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {createStream} from '../../actions';\r\nimport StreamForm from './StreamForm';\r\nimport streamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n \r\n    \r\n                     \r\n  \r\n                           \r\n    onSubmit = formValues => {\r\n       this.props.createStream(formValues);\r\n       \r\n    }\r\n\r\n\r\n   \r\n    render(){\r\n                       \r\n        return (      \r\n            <div>\r\n                <h3>\r\n                    Create a stream\r\n                </h3>\r\n                <StreamForm onSubmit={this.onSubmit}/>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};        \r\n  \r\n\r\n\r\n                              \r\n\r\nexport default connect(null,{createStream}) (StreamCreate); ","E:\\streamili\\client\\src\\components\\streams\\StreamDelete.js",[],"E:\\streamili\\client\\src\\components\\streams\\StreamShow.js",[],"E:\\streamili\\client\\src\\components\\streams\\StreamList.js",["86"],"import { fromPairs } from 'lodash';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchStreams} from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount () {\r\n        this.props.fetchStreams();  \r\n        \r\n    }         \r\n             \r\n    renderAdmin(stream) {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className='right floated content'>\r\n                    <Link to={`/streams/edit/${stream.id}`} className='ui button primary'>\r\n                        Edit\r\n                    </Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} className='ui button negative'>\r\n                        Delete \r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        console.log(this.props.streams);\r\n        return this.props.streams.map(stream =>{\r\n            return (        \r\n                <div className='item' key={stream.id}>\r\n                    {this.renderAdmin(stream)} \r\n                    <i className='large middle aligned icon camera' />\r\n                    <div className='content'>\r\n                        <Link to={`/streams/${stream.id}`}>\r\n                            {stream.title}\r\n                        </Link>\r\n                        <div className='description'>{stream.description}</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n\r\n        );\r\n    }\r\n\r\n    renderCreate() {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{textAlign:'right'}}> \r\n                    <Link to=\"/streams/new\" className='ui button primary'>\r\n                        Create Stream\r\n                    </Link>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props.streams);\r\n       return (\r\n           <div>\r\n               <h2>Streams</h2>\r\n               <div className='ui celled list'>{this.renderList()}</div>\r\n               {this.renderCreate()}\r\n           </div> \r\n       )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>  {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn:state.auth.isSignedIn\r\n    };\r\n};                \r\n          \r\nexport default connect (mapStateToProps, {fetchStreams}) (StreamList);","E:\\streamili\\client\\src\\components\\streams\\StreamEdit.js",[],"E:\\streamili\\client\\src\\components\\Header.js",[],"E:\\streamili\\client\\src\\components\\GoogleAuth.js",[],"E:\\streamili\\client\\src\\actions\\index.js",["87"],"import { formValues } from 'redux-form';\r\nimport history from '../history';\r\nimport streams from '../apis/streams';\r\nimport {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM} from './types';  \r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type:SIGN_IN,\r\n        payload:userId\r\n    };                  \r\n};\r\n          \r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };               \r\n};         \r\n    \r\nexport const createStream = formValues => async (dispatch,getState) =>{\r\n    \r\n    const {userId} = getState().auth;\r\n    const response= await streams.post('/streams',{...formValues,userId});\r\n    \r\n    dispatch({type:CREATE_STREAM,payload:response.data});   \r\n    history.push(\"/\");\r\n}; \r\n \r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams');\r\n\r\n    dispatch ({type:FETCH_STREAMS,payload:response.data});\r\n};\r\n           \r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n\r\n    dispatch({type:FETCH_STREAM,payload:response.data});\r\n};\r\n\r\n\r\nexport const editStream = (id,formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n    dispatch({type:EDIT_STREAM, payload:response.data});\r\n    history.push('/');\r\n};\r\n\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n     await streams.delete(`/streams/${id}`);\r\n\r\n     dispatch({type:DELETE_STREAM,payload:id});\r\n     history.push(\"/\");\r\n    \r\n};           ","E:\\streamili\\client\\src\\reducers\\index.js",[],"E:\\streamili\\client\\src\\reducers\\authReducer.js",["88"],"import {SIGN_IN,SIGN_OUT} from '../actions/types';    \r\n\r\nconst INTIAL_STATE = {\r\n    isSignedIn:null,\r\n    userId:null\r\n};\r\n\r\nexport default (state=INTIAL_STATE,action) => {\r\n    switch(action.type){\r\n        case SIGN_IN:\r\n            return {...state,isSignedIn:true,userId:action.payload};\r\n        case SIGN_OUT:\r\n            return {...state,isSignedIn:false,userId:null}; \r\n        default:\r\n            return state;       \r\n    }\r\n};             ","E:\\streamili\\client\\src\\actions\\types.js",[],"E:\\streamili\\client\\src\\apis\\streams.js",[],"E:\\streamili\\client\\src\\reducers\\streamReducer.js",["89","90"],"import _ from 'lodash';\r\nimport actions from 'redux-form/lib/actions';\r\nimport {\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    CREATE_STREAM,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state= {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAMS:\r\n            return {...state, ..._.mapKeys(action.payload, 'id')};\r\n        case FETCH_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case CREATE_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case EDIT_STREAM:\r\n            return {...state, [action.payload.id]: action.payload}        \r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload);\r\n\r\n        default: \r\n            return state;\r\n    }\r\n};","E:\\streamili\\client\\src\\history.js",[],"E:\\streamili\\client\\src\\components\\streams\\StreamForm.js",["91"],"import React from 'react';\r\nimport {Field,formValues,reduxForm} from 'redux-form';\r\n    \r\nclass StreamForm extends React.Component {\r\n    renderError({error, touched}) {                  \r\n                if (touched && error){\r\n                    return (\r\n                        <div className='ui error message'>\r\n                            <div className='header'>{error}</div>\r\n                        </div>\r\n                    );\r\n                }\r\n              }\r\n    \r\n                     \r\n    renderInput = ({input,label,meta}) => {\r\n        \r\n        return(\r\n            \r\n            <div className='field'>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete='off'/>\r\n                {this.renderError(meta)}\r\n            </div>);\r\n        \r\n    }\r\n                           \r\n    onSubmit = formValues => {      \r\n       this.props.onSubmit(formValues);\r\n       \r\n    };                                  \r\n \r\n                      \r\n   \r\n    render(){\r\n                       \r\n        return (      \r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className='ui form error'>\r\n                <Field name='title' component={this.renderInput} label='Enter the title'/>\r\n                <Field name='description' component={this.renderInput} label='Enter the description'/>\r\n                <button className='ui button primary'>Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n    \r\n};        \r\n  \r\nconst validate = formValues => {\r\n    const errors = {};\r\n     \r\n    if (!formValues.title) {\r\n        errors.title='You must enter a title';    \r\n    }\r\n         \r\n    if (!formValues.description) {\r\n        errors.description= 'You must enter a description';\r\n    }\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'streamForm',   \r\n    validate                       \r\n}) (StreamForm);                                    \r\n                  ","E:\\streamili\\client\\src\\components\\Modal.js",[],{"ruleId":"92","severity":1,"message":"93","line":3,"column":19,"nodeType":"94","messageId":"95","endLine":3,"endColumn":27},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":18},{"ruleId":"92","severity":1,"message":"101","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":19},{"ruleId":"92","severity":1,"message":"102","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":8,"column":1,"nodeType":"105","endLine":17,"endColumn":3},{"ruleId":"92","severity":1,"message":"106","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":11,"column":1,"nodeType":"105","endLine":27,"endColumn":3},{"ruleId":"92","severity":1,"message":"102","line":2,"column":15,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},"no-unused-vars","'provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'streamForm' is defined but never used.","'fromPairs' is defined but never used.","'formValues' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'actions' is defined but never used.","no-global-assign","no-unsafe-negation"]